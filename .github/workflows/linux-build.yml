name: Linux build
on:
  workflow_call:
    inputs:
      repository:
        default: ${{ github.repository }}
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang, musl-gcc]
        include:
          - compiler: gcc
            cxx_compiler: g++
            static: false
            build_dir: build-gcc
          - compiler: clang
            cxx_compiler: clang++
            static: false
            build_dir: build-clang
          - compiler: musl-gcc
            cxx_compiler: g++
            static: true
            build_dir: build-musl
    env:
      CC: ${{ matrix.compiler }}
      CXX: ${{ matrix.cxx_compiler }}

    steps:
      - name: Checkout last commit
        uses: actions/checkout@v5
        with:
          repository: ${{ inputs.repository }}

      - name: Install dependency (system packages)
        if: ${{ matrix.compiler != 'musl-gcc' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libboost-all-dev libglog-dev libyaml-cpp-dev libgflags-dev \
            libleveldb-dev libmarisa-dev libopencc-dev
          ./action-install-linux.sh

      - name: Install dependency (musl build)
        if: ${{ matrix.compiler == 'musl-gcc' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools \
            libboost-all-dev libyaml-cpp-dev libgflags-dev \
            libleveldb-dev libmarisa-dev libopencc-dev
          ./action-install-linux.sh

      - name: Build glog from source (for musl)
        if: ${{ matrix.compiler == 'musl-gcc' }}
        run: |
          git clone --depth=1 https://github.com/google/glog.git
          cd glog
          mkdir build && cd build
          cmake .. \
            -DBUILD_SHARED_LIBS=OFF \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_C_COMPILER=musl-gcc \
            -DCMAKE_CXX_COMPILER=g++
          make -j$(nproc)
          sudo make install

      - name: Configure (CMake)
        run: |
          mkdir -p ${{ matrix.build_dir }} && cd ${{ matrix.build_dir }}
          if [ "${{ matrix.static }}" = "true" ]; then
            cmake .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DBUILD_SHARED_LIBS=OFF \
              -DCMAKE_EXE_LINKER_FLAGS="-static" \
              -DCMAKE_C_COMPILER=${{ matrix.compiler }} \
              -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }}
          else
            cmake .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_C_COMPILER=${{ matrix.compiler }} \
              -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }}
          fi

      - name: Build
        run: |
          cd ${{ matrix.build_dir }}
          cmake --build . -j$(nproc)

      - name: Test
        if: ${{ !matrix.static }}
        run: |
          cd ${{ matrix.build_dir }}
          ctest --output-on-failure

      - name: Upload musl static artifacts
        if: ${{ matrix.static }}
        uses: actions/upload-artifact@v4
        with:
          name: librime-musl-static
          path: |
            ${{ matrix.build_dir }}/librime.a
            ${{ matrix.build_dir }}/bin/*
